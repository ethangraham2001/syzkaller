# Copyright 2025 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

# Import constants needed for openat(2), like O_WRONLY.
include <linux/fcntl.h>

resource fd_kftf[fd]

kftf_simple_arg {
    data	int32
    access	int32
}

# 3. Define a specialized openat() syscall.
# It opens the specific debugfs file and returns the special fd_kftf resource.
# Using a '$' suffix makes this a unique variant for Syzkaller.
openat$kftf(fd const[AT_FDCWD], file ptr[in, string["/sys/kernel/debug/kftf/input"]], flags const[O_WRONLY], mode const[0]) fd_kftf

# 4. Define a specialized write() syscall.
# It takes the fd_kftf resource as an argument.
# The `data` argument is a pointer to the struct you defined.
# The `len` argument is automatically calculated to be the size of the input struct.
write$kftf(fd fd_kftf, data ptr[in, kftf_simple_arg], len bytesize[data])

# 5. Define a specialized close() syscall.
# This ensures that the special fd_kftf resource is properly closed.
close$kftf(fd fd_kftf)
